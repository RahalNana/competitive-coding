    static String[] mergeSort(String[] arr)
    {
        int n = arr.length;
        if (n==1) return arr;
        String[] arr1 = new String[n/2];
        String[] arr2 = new String[n-n/2];
        for(int x=0; x<n/2; x++)
            arr1[x]=arr[x];
        for(int x=0; x<n-n/2; x++)
            arr2[x]=arr[x+n/2];
        return merge(mergeSort(arr1),mergeSort(arr2));
    }

    static String[] merge(String[] arr1, String[] arr2)
    {
        int n1 = arr1.length;
        int n2 = arr2.length;
        String[] res = new String[n1+n2];
        int x1=0, x2=0;
        for(int y=0; y<n1+n2; y++)
        {
            if(x1>=n1)
            {
                res[y]=arr2[x2];
                x2++;
            }
            else if (x2>=n2)
            {
                res[y]=arr1[x1];
                x1++;
            }
            else if(greater(arr1[x1],arr2[x2]))
            {
                res[y]=arr2[x2];
                x2++;
            }
            else
            {
                res[y]=arr1[x1];
                x1++;
            }
        }
        return res;
    }

    static boolean greater(String a, String b)
    {
        return a>b;
    }
